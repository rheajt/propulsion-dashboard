{"version":3,"sources":["styles/theme.js","hooks/useTimer.js","components/Time.js","components/TaskButton.js","components/SettingsButton.js","components/Drawer.js","components/TaskForm.js","App.js","styles/withRoot.js","serviceWorker.js","index.js"],"names":["rawTheme","createMuiTheme","palette","primary","light","main","dark","secondary","warning","error","xLight","red","success","green","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontFamilySecondary","fontHeader","color","text","fontWeight","textTransform","theme","background","default","common","white","placeholder","grey","textShadow","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","body1","body2","useTimer","useState","time","day","year","setTime","React","useEffect","interval","setInterval","date","Date","getHours","getMinutes","toString","padStart","format","clearInterval","Time","Fade","in","timeout","Typography","variant","style","withStyles","taskButton","position","bottom","right","onClick","classes","className","useStyles","makeStyles","button","left","SettingsButton","Drawer","open","setTasks","children","anchor","onClose","event","type","key","Task","task","console","log","complete","FormControlLabel","control","Checkbox","checked","onChange","inputProps","label","topBar","height","mixins","toolbar","minHeight","display","alignItems","justifyContent","fontStyle","padding","backgroundSize","pxToRem","backgroundImage","TaskForm","tasks","toggleCheck","ind","onSubmit","e","preventDefault","target","value","TextField","name","map","container","backgroundPosition","backgroundRepeat","withRoot","Component","props","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3c809f1.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport { green, grey, red } from '@material-ui/core/colors';\n\nconst rawTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#69696a',\n      main: '#28282a',\n      dark: '#1e1e1f',\n    },\n    secondary: {\n      light: '#fff5f8',\n      main: '#ff3366',\n      dark: '#e62958',\n    },\n    warning: {\n      main: '#ffc071',\n      dark: '#ffb25e',\n    },\n    error: {\n      xLight: red[50],\n      main: red[500],\n      dark: red[700],\n    },\n    success: {\n      xLight: green[50],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    fontFamily: \"'Work Sans', sans-serif\",\n    fontSize: 14,\n    fontWeightLight: 300, // Work Sans\n    fontWeightRegular: 400, // Work Sans\n    fontWeightMedium: 700, // Roboto Condensed\n    fontFamilySecondary: \"'Roboto Condensed', sans-serif\",\n  },\n});\n\nconst fontHeader = {\n  color: rawTheme.palette.text.primary,\n  fontWeight: rawTheme.typography.fontWeightMedium,\n  fontFamily: rawTheme.typography.fontFamilySecondary,\n  textTransform: 'uppercase',\n};\n\nconst theme = {\n  ...rawTheme,\n  palette: {\n    ...rawTheme.palette,\n    background: {\n      ...rawTheme.palette.background,\n      default: rawTheme.palette.common.white,\n      placeholder: grey[200],\n    },\n  },\n  typography: {\n    ...rawTheme.typography,\n    fontHeader,\n    textShadow: '0 1px 5px rgba(0,0,0,.1)',\n    h1: {\n      ...rawTheme.typography.h1,\n      ...fontHeader,\n      letterSpacing: 0,\n      fontSize: 60,\n      textShadow: '0 1px 5px rgba(0,0,0,.4)',\n    },\n    h2: {\n      ...rawTheme.typography.h2,\n      ...fontHeader,\n      fontSize: 48,\n    },\n    h3: {\n      ...rawTheme.typography.h3,\n      ...fontHeader,\n      fontSize: 42,\n    },\n    h4: {\n      ...rawTheme.typography.h4,\n      ...fontHeader,\n      fontSize: 36,\n    },\n    h5: {\n      ...rawTheme.typography.h5,\n      fontSize: 20,\n      fontWeight: rawTheme.typography.fontWeightLight,\n    },\n    h6: {\n      ...rawTheme.typography.h6,\n      ...fontHeader,\n      fontSize: 18,\n    },\n    subtitle1: {\n      ...rawTheme.typography.subtitle1,\n      fontSize: 18,\n    },\n    body1: {\n      ...rawTheme.typography.body2,\n      fontWeight: rawTheme.typography.fontWeightRegular,\n      fontSize: 16,\n    },\n    body2: {\n      ...rawTheme.typography.body1,\n      fontSize: 14,\n    },\n  },\n};\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { format } from 'date-fns';\n\nfunction useTimer() {\n  const [time, setTime] = useState({\n    time: '',\n    day: '',\n    year: '',\n  });\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      const date = new Date();\n      const time = `${date.getHours()}:${date\n        .getMinutes()\n        .toString()\n        .padStart(2, '0')}`;\n\n      const day = format(date, 'iiii, MMM do');\n      const year = format(date, `Do 'day of' yyyy`);\n      setTime({ time, day, year });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return time;\n}\n\nexport default useTimer;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport useTimer from '../hooks/useTimer';\n\nfunction Time() {\n  const { time, day } = useTimer();\n\n  return (\n    <Fade in timeout={4000}>\n      <div>\n        <Typography variant=\"h1\" color=\"inherit\" style={{ fontSize: '8rem' }}>\n          {time}\n        </Typography>\n        <Typography variant=\"h4\" color=\"inherit\" style={{ fontSize: '2rem' }}>\n          {day}\n        </Typography>\n      </div>\n    </Fade>\n  );\n}\n\nexport default Time;\n","import React from 'react';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = {\n  taskButton: {\n    position: 'absolute',\n    bottom: '1rem',\n    right: '2rem',\n  },\n};\n\nfunction TaskButton({ onClick, classes }) {\n  return (\n    <div className={classes.taskButton} onClick={onClick}>\n      <FormatListNumberedIcon fontSize=\"large\" />\n    </div>\n  );\n}\n\nexport default withStyles(styles)(TaskButton);\n","import React from 'react';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  button: {\n    position: 'absolute',\n    left: '2rem',\n    bottom: '1rem',\n  },\n});\n\nfunction SettingsButton() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.button}>\n      <SettingsIcon fontSize=\"large\" />\n    </div>\n  );\n}\n\nexport default SettingsButton;\n","import React from 'react';\nimport { Drawer as MuiDrawer } from '@material-ui/core';\n\nexport default function Drawer({ open, setTasks, children }) {\n  const toggleDrawer = event => {\n    if (\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    setTasks(false);\n  };\n\n  return (\n    <MuiDrawer anchor=\"right\" open={open} onClose={toggleDrawer}>\n      {children}\n    </MuiDrawer>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  makeStyles,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n} from '@material-ui/core';\nimport { format } from 'date-fns';\n\nfunction Task({ task, onClick }) {\n  console.log(task.complete);\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={task.complete}\n            onChange={onClick}\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n          />\n        }\n        label={task.text}\n      />\n    </div>\n  );\n}\n\nfunction TaskForm() {\n  const classes = useStyles();\n  const [tasks, setTasks] = useState([\n    {\n      complete: false,\n      text: 'first task',\n    },\n    {\n      complete: true,\n      text: 'second task',\n    },\n  ]);\n\n  const toggleCheck = ind => () => {\n    tasks[ind].complete = !tasks[ind].complete;\n    setTasks([...tasks]);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setTasks([...tasks, { complete: false, text: e.target.task.value }]);\n  };\n\n  return (\n    <div className={classes.background}>\n      <div className={classes.topBar} onClick={() => console.log('close')}>\n        {format(new Date(), 'd.LL.yy E')}\n      </div>\n      <form onSubmit={onSubmit}>\n        <TextField name=\"task\" placeholder=\"New task here\" variant=\"outlined\" />\n      </form>\n      {tasks.map((task, ind) => (\n        <Task task={task} key={task.text + ind} onClick={toggleCheck(ind)} />\n      ))}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(({ typography, ...theme }) => ({\n  topBar: {\n    height: theme.mixins.toolbar.minHeight,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '2rem',\n    textTransform: 'uppercase',\n    fontStyle: 'italic',\n  },\n  background: {\n    height: '100%',\n    padding: '1rem',\n    backgroundSize: `${typography.pxToRem(40)} ${typography.pxToRem(40)}`,\n    backgroundImage:\n      'linear-gradient(to right, lightgrey 1px, transparent 1px), linear-gradient(to bottom, lightgrey 1px, transparent 1px)',\n  },\n}));\n\nexport default TaskForm;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport withRoot from './styles/withRoot';\nimport Time from './components/Time';\nimport TaskButton from './components/TaskButton';\nimport SettingsButton from './components/SettingsButton';\nimport Drawer from './components/Drawer';\nimport TaskForm from './components/TaskForm';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    backgroundImage: 'url(https://source.unsplash.com/daily)',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center',\n    backgroundRepeat: 'no-repeat',\n    height: '100vh',\n    color: theme.palette.common.white,\n    textShadow: '0 1px 5px rgba(0,0,0,.1)',\n  },\n  main: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    position: 'relative',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [tasks, setTasks] = React.useState(false);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.main}>\n        <Time />\n        <TaskButton onClick={() => setTasks(true)} />\n        <SettingsButton />\n      </div>\n      <Drawer open={tasks} setTasks={setTasks}>\n        <TaskForm />\n      </Drawer>\n    </div>\n  );\n}\n\nexport default withRoot(App);\n","import React from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\n\nexport default function withRoot(Component) {\n  function WithRoot(props) {\n    return (\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </ThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}